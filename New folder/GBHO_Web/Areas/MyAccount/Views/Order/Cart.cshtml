@model List<OrderItemViewModel>
@{
    ViewBag.Title = "Order";
    Layout = "~/Areas/MyAccount/Views/Shared/_MyAccountLayout.cshtml";
}


<div class="col-lg-12">
    <div class="card">
        <div class="card-header">

            @if (ViewBag.AllUsers != null)
            {
                <div class="pull-right col-6">
                    <strong>Cart</strong>
                </div> 
                <div class="pull-right col-6">
                    @Html.DropDownList("DDUsers", ViewBag.AllUsers as List<SelectListItem>, new { @class="form-control-sm form-control"})
                </div>                
            }
            else
            {
                <strong>Cart</strong>    
            }
            
        </div>
        <div class="card-body card-block">

            @if (ViewBag.Success != null)
            {
                <div class="sufee-alert alert with-close alert-success alert-dismissible fade show">
                    <span class="badge badge-pill badge-success">Success!</span>
                    @ViewBag.Success.ToString()
                </div>
            }
            else if (ViewBag.Error != null)
            {
                <div class="sufee-alert alert with-close alert-danger alert-dismissible fade show">
                    <span class="badge badge-pill badge-danger">Sorry!</span>
                    @ViewBag.Error.ToString()
                </div>
            } 

             @if (Model != null && Model.Count > 0)
             {
                 using (Html.BeginForm())
                 {
                     <input id="OrderBy" name="OrderBy" value="@ViewBag.CurrUser" type="hidden" />
                     <input id="submitType" name="submitType" value="" type="hidden" />
                     @Html.Hidden("OrderId", Model.First().OrderId);

                                                                   foreach (OrderItemViewModel item in Model)
                                                                   {

                                                                       string pictureImg = string.IsNullOrEmpty(item.Picture) ? System.Configuration.ConfigurationManager.AppSettings["NoProductImage"].ToString() : System.Configuration.ConfigurationManager.AppSettings["UploadPath"].ToString() + item.Picture;
                     
                            <div class="col-12 p_item_@item.OrderItemId">
                                <div class="col col-md-2">
                                    <img class="align-self-center mr-3" style="width:100px; height:100px;" alt="" src="@pictureImg">
                                </div>
                                <div class="col-12 col-md-8">
                                    <h4 class="mt-2 mb-1">@item.ProductName</h4>
                                    <div><i class="fa fa-rouble"></i> @item.Amount&nbsp;&nbsp;|&nbsp;&nbsp;<span class="badge badge-secondary">@(item.Points)pts</span></div>
                                    <button type="button" class="btn btn-link btn-sm text-danger btnRemove" orderItemId="@item.OrderItemId"><i class="ti-trash"></i>&nbsp; Remove</button>
                                </div>
                                <div class="col-12 col-md-2" id="p_@item.OrderItemId.ToString()">
                                    <small class="form-text">Quantity</small>
                                    @Html.DropDownList("p_qty_" + @item.OrderItemId.ToString(), new SelectList((List<SelectListItem>)ViewBag.QtyList, "Value", "Text", item.QTY), new { @class = "form-control ddQty", @style = "margin-top:5px;", @orderItemId = item.OrderItemId.ToString() })
                                    @Html.Hidden("p_amt_" + @item.OrderItemId.ToString(), item.Amount, new { @class = "pAmt" })
                                    @Html.Hidden("p_pts_" + @item.OrderItemId.ToString(), item.Points, new { @class = "pPts" })
                                    @Html.Hidden("p_amt_tot_" + @item.OrderItemId.ToString(), (item.Amount * item.QTY), new { @class = "pAmtTot" })
                                    @Html.Hidden("p_pts_tot_" + @item.OrderItemId.ToString(), (item.Points * item.QTY), new { @class = "pPtsTot" })
                                </div>
                            </div>

                            <div class="col-12 p_item_@item.OrderItemId"><hr /></div>

                                                                   }
                }
                 
                 <div class="col-md-12">
                    <div class="weather-category">
                        <ul>
                            <li style="width:49%">
                                Total (VAT incl.)
                                <h5 id="totalAmount">@ViewBag.Total</h5>                            
                            </li>
                            <li style="border-right:0; width:49%">
                                Total Points
                                <h5 id="totalPoints">@ViewBag.TotalPoints</h5>
                            </li>
                        </ul>
                    </div>
                </div>

             }
             else
             {
                 <div class="col-12">
                     <h4 class="text-center text-secondary">No Pending Orders</h4>
                 </div>
             }
            
        </div>

        @if (Model != null && Model.Count > 0)
        {
            <div class="card-footer">                
                <button id="btnSubmit" type="button" class="btn btn-primary">Submit</button>&nbsp;
                <button id="btnCancel" type="button" class="btn btn-primary">Cancel</button>&nbsp;
                <button type="button" class="btn btn-secondary" onclick="window.location='@Url.Content("~/MyAccount/Order")';">Back to Order Product</button>
            </div>
        }
        else
        {
            <div class="card-footer">
                <button type="button" class="btn btn-secondary" onclick="window.location='@Url.Content("~/MyAccount/Order")';">Back to Order Product</button>
            </div>
        }
        

    </div>
</div>

@section AdditionalScript{
    
    <script type="text/javascript">
        jQuery(document).ready(function () {

            UpdateTotal();

            jQuery('#btnCancel').click(function () {
                var r = confirm("Are you sure you want to cancel this order?");
                if (r == true) {
                    jQuery('#submitType').val('cancel');
                    jQuery('form').submit();
                }                
            });

            jQuery('#btnSubmit').click(function () {
                var r = confirm("Are you sure you want to submit this order?");
                if (r == true) {
                    jQuery('#submitType').val('submit');
                    jQuery('form').submit();
                }
            });

            jQuery('.btnRemove').click(function () {

                var orderItemId = jQuery(this).attr('orderItemId');

                jQuery.ajax({
                        type: "POST",
                        url: "@Url.Content("~/MyAccount/Order/RemoveOrderItem")",
                        content: "application/json; charset=utf-8",
                        dataType: "json",
                        data: { itemId: orderItemId },
                        success: function (d) {
                            if (d.success == false)
                            {
                                alert(d.error);
                            }
                            else {
                                jQuery('.p_item_' + orderItemId).remove();
                                UpdateTotal();
                            }
                        }
                    });


            });

            jQuery('#DDUsers').change(function () {
                var user = jQuery(this).val();
                jQuery('#OrderBy').val(user);
            });

            jQuery('.ddQty').change(function () {
                
                var itemId = jQuery(this).attr('orderItemId');
                var qty = parseFloat(jQuery(this).val());                
                var amt = parseFloat(jQuery("#p_amt_" + itemId).val());
                var pts = parseFloat(jQuery("#p_pts_" + itemId).val());
                
                jQuery('#p_amt_tot_' + itemId).val(qty * amt);
                jQuery('#p_pts_tot_' + itemId).val(qty * pts);

                UpdateTotal();                

            });

            function UpdateTotal()
            {
                var amtTot = 0;
                jQuery(".pAmtTot").each(function (i, el) {
                    var elem = jQuery(el);
                    amtTot = amtTot + parseFloat(elem.val());
                });

                var ptsTot = 0;
                jQuery(".pPtsTot").each(function (i, el) {
                    var elem = jQuery(el);
                    ptsTot = ptsTot + parseFloat(elem.val());
                });

                jQuery('#totalAmount').html(amtTot.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,'));
                jQuery('#totalPoints').html(ptsTot.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,'));

                if (amtTot == 0) {
                    jQuery("#btnSubmit").hide();
                    jQuery("#btnCancel").hide();
                }
                else {
                    jQuery("#btnSubmit").show();
                    jQuery("#btnCancel").show();
                }
            }

        });
    </script>

}