@model MemberViewModel
@{  
    ViewBag.Title = "Members";
    Layout = "~/Areas/MyAccount/Views/Shared/_MyAccountLayout.cshtml";
    string subTitle = Model.MemberId > 0 ? "Edit" : "Add";
    string pictureImg = string.IsNullOrEmpty(Model.Picture) ? System.Configuration.ConfigurationManager.AppSettings["NoProfileImage"].ToString() : Model.Picture;    
}

<style>
    .payment {
        display:none;
    }
</style>

<div class="col-lg-12">
    <div class="card">

        <div class="card-header">
        <strong>@subTitle</strong> Member
        </div>

        @using (Html.BeginForm("Record", "Member", null, FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
        { 
            
            @Html.HiddenFor(x=>x.MemberId)

            <div class="card-body card-block">

                @if (ViewBag.IsSuccess != null)
                {
                    if ((bool)ViewBag.IsSuccess)
                    {
                        <div class="sufee-alert alert with-close alert-success alert-dismissible fade show">
                            <span class="badge badge-pill badge-success">Success!</span>
                            @System.Configuration.ConfigurationManager.AppSettings["RecordSuccessMsg"].ToString()
                        </div>
                    }
                    else
                    {
                        <div class="sufee-alert alert with-close alert-danger alert-dismissible fade show">
                            <span class="badge badge-pill badge-danger">Sorry!</span>
                            @System.Configuration.ConfigurationManager.AppSettings["RecordErrorMsg"].ToString()
                            @if(string.IsNullOrEmpty(ViewBag.ErrMsg))
                            {
                                @Html.ValidationSummary(false)   
                            }
                            else
                            {
                                <br /><br /><b>@ViewBag.ErrMsg</b>
                            }
                        </div>
                    }
                }           

                <div class="row form-group">
                    <div class="col col-md-3"><label class=" form-control-label">Member ID *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.MemberCode, new { @class="form-control", @placeholder="Member Code", @disabled="disabled"})</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Username *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.Username, new { @class="form-control", @placeholder="User name"})@Html.ValidationMessageFor(m => m.Username,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">First Name *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.FName, new { @class="form-control", @placeholder="First Name"})@Html.ValidationMessageFor(m => m.FName,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Middle Name *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.MName, new { @class="form-control", @placeholder="Middle Name"})@Html.ValidationMessageFor(m => m.MName,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Last Name *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.LName, new { @class="form-control", @placeholder="Last Name"})@Html.ValidationMessageFor(m => m.LName,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Email *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.Email, new { @class="form-control", @placeholder="e.g. juandelacruz@gbho.com"})@Html.ValidationMessageFor(m => m.Email,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Mobile No *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.MobileNo, new { @class="form-control mobilePhone", @placeholder="e.g. +63 123 456 7890"})@Html.ValidationMessageFor(m => m.MobileNo,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Telephone No</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.TelNo, new { @class="form-control", @placeholder="Telephone No"})</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Occupation</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.Occupation, new { @class="form-control", @placeholder="Occupation"})</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Birthday *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.Birthday, new { @Value=Model.BirthdayString, @class="form-control datepicker", @placeholder="e.g 01/31/1995"})@Html.ValidationMessageFor(m => m.Birthday,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Birthday Place *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.BirthPlace, new { @class="form-control", @placeholder="Birth Place"})@Html.ValidationMessageFor(m => m.BirthPlace,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Citizenship *</label></div>
                    <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.Citizenship, new { @class="form-control", @placeholder="Citizenship"})@Html.ValidationMessageFor(m => m.Citizenship,"", new { @class="text-danger" })</div>
                </div>
                                
                <div class="row form-group">
                        <div class="col col-md-3"><label class=" form-control-label">Gender *</label></div>
                    <div class="col col-md-9">
                        <div class="form-check-inline form-check">
                            @Html.HiddenFor(m => m.Gender)
                            <label for="inline-radio1" class="form-check-label ">                            
                                <input type="radio" id="gender-male" name="gender" value="option1" class="form-check-input" onclick="@("SetOptionValue('Gender','" + Gender.Male.ToString() + "')")"  @(Model.Gender == Gender.Male.ToString()? "checked":"")>@Gender.Male.ToString()
                            </label>
                            &nbsp;
                            <label for="inline-radio2" class="form-check-label ">
                                <input type="radio" id="gender-female" name="gender" value="option2" class="form-check-input" onclick="@("SetOptionValue('Gender','" + Gender.Female.ToString() + "')")"  @(Model.Gender == Gender.Female.ToString()? "checked":"")>@Gender.Female.ToString()
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row form-group">
                        <div class="col col-md-3"><label class=" form-control-label">Marital Status *</label></div>
                    <div class="col col-md-9">
                        <div class="form-check-inline form-check">
                            @Html.HiddenFor(m => m.MaritalStatus)
                            <label for="inline-radio1" class="form-check-label ">                            
                                <input type="radio" id="mstatus-single" name="mstatus" value="option1" class="form-check-input" onclick="@("SetOptionValue('MaritalStatus','" + MaritalStatus.Single.ToString() + "')")"  @(Model.MaritalStatus == MaritalStatus.Single.ToString()? "checked":"")>@MaritalStatus.Single.ToString()
                            </label>
                            &nbsp;
                            <label for="inline-radio2" class="form-check-label ">
                                <input type="radio" id="mstatus-married" name="mstatus" value="option2" class="form-check-input" onclick="@("SetOptionValue('MaritalStatus','" + MaritalStatus.Married.ToString() + "')")"  @(Model.MaritalStatus == MaritalStatus.Married.ToString()? "checked":"")>@MaritalStatus.Married.ToString()
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Present Address *</label></div>
                    <div class="col-12 col-md-9">@Html.TextBoxFor(m=>m.PresentAddress, new { @class="form-control", @placeholder="Present Address"})@Html.ValidationMessageFor(m => m.PresentAddress,"", new { @class="text-danger" })</div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Provincial Address</label></div>
                    <div class="col-12 col-md-9">@Html.TextBoxFor(m=>m.ProvincialAddress, new { @class="form-control", @placeholder="Provincial Address"})</div>
                </div>
                                
                @if (Model.HierarchyCode == "$1") // $1 means -> top level
                {
                    @Html.HiddenFor(m => m.SponsorId)
                    @Html.HiddenFor(m => m.PlacementId)
                    @Html.HiddenFor(m => m.HierarchyCode)
                }
                else
                {
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Placement *</label></div>
                        <div class="col-12 col-md-9">
                            @Html.DropDownListFor(m => m.PlacementId, new SelectList((List<SelectListItem>)ViewBag.Placement, "Value", "Text"), new { @class="form-control" })
                            @Html.ValidationMessageFor(m => m.PlacementId,"", new { @class="text-danger" })
                        </div>
                    </div>
                    
                    <div class="row form-group">
                        <div class="col col-md-3"><label class=" form-control-label">Placement Group *</label></div>
                        <div class="col col-md-9">
                            @Html.HiddenFor(m => m.HierarchyCode)
                            <div class="form-check-inline form-check">                                
                                <label for="inline-radio1" class="form-check-label ">                            
                                    <input type="radio" id="pg-left" name="pg" value="option1" class="form-check-input" onclick="@("SetOptionValue('HierarchyCode','0')")"  @(Model.HierarchyCode.Substring(Model.HierarchyCode.Length - 1) == "0"? "checked":"")>@PlacementGroup.Left.ToString()
                                </label>
                                &nbsp;
                                <label for="inline-radio2" class="form-check-label ">
                                    <input type="radio" id="pg-right" name="pg" value="option2" class="form-check-input" onclick="@("SetOptionValue('HierarchyCode','1')")"  @(Model.HierarchyCode.Substring(Model.HierarchyCode.Length - 1) == "1"? "checked":"")>@PlacementGroup.Right.ToString()
                                </label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Sponsor *</label></div>
                        <div class="col-12 col-md-9">
                            @Html.DropDownListFor(m => m.SponsorId, new SelectList((List<SelectListItem>)ViewBag.Sponsors, "Value", "Text"), new { @class="form-control" })
                            @Html.ValidationMessageFor(m => m.SponsorId,"", new { @class="text-danger" })
                        </div>
                    </div>
                }

                <div class="row form-group">
                    <div class="col col-md-3"><label for="text-input" class=" form-control-label">Payment Type @Model.PaymentType</label></div>
                    <div class="col-12 col-md-5">
                        @Html.DropDownListFor(m => m.PaymentType, new SelectList((List<SelectListItem>)ViewBag.PaymentType, "Value", "Text"), new { @class="form-control" })
                    </div>
                </div>

                <div class="payment paymentCash">
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Cash Note</label></div>
                        <div class="col-12 col-md-9">@Html.TextAreaFor(m=>m.CashNote, new { @class="form-control", @placeholder="Cash Note", @rows="4"})</div>
                    </div>
                </div>

                <div class="payment paymentDeposit">
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Bank Branch</label></div>
                        <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.BankBranch, new { @class="form-control", @placeholder="Bank Branch"})</div>
                    </div>
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Deposit Number</label></div>
                        <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.DepositNo, new { @class="form-control", @placeholder="Deposit Number"})</div>
                    </div>

                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Date Deposited</label></div>
                        <div class="col-12 col-md-5">@Html.TextBoxFor(m=>m.DateDeposited, new { @Value=Model.DateDepositedString, @class="form-control datepicker", @placeholder="e.g 01/31/1995"})</div>
                    </div>
                </div>

                @if (Model.MemberId > 0)
                {
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Date Joined</label></div>
                        <div class="col-12 col-md-5"><p class="form-control-static">@Model.DateJoinedString</p></div>
                    </div>
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">Member Type *</label></div>
                        <div class="col-12 col-md-5"><p class="form-control-static">@(Model.MemberType == GBHO_Business.Objects.MemberTypeEnum.ForApproval.ToString()? "For Approval" : Model.MemberType == GBHO_Business.Objects.MemberTypeEnum.ForValidate.ToString()? "For Validation" : Model.MemberType)</p></div>
                    </div>
                }

                <div class="row form-group">
                    <div class="col col-md-3"><label for="file-input" class=" form-control-label">Profile Picture</label></div>
                    <div class="col-12 col-md-9"><input type="file" id="file" accept="image/*" name="file" class="form-control-file" ></div>
                     <div class="col col-md-3">&nbsp;</div>
                     <div class="col-12 col-md-9" style="padding-top:20px;">
                        <img src="@pictureImg" width="200px" height="200px" />                     
                     </div>
                </div>

                @if (Model.MemberId > 0 && (ViewBag.MemberRole == "SuperAdmin" || ViewBag.MemberRole == "DevAdmin"))
                {
                    <hr />
                    
                    <div class="row form-group">
                        <div class="col col-md-3"><label for="text-input" class=" form-control-label">User Role</label></div>
                        <div class="col-12 col-md-4">
                            @Html.DropDownListFor(m => m.RoleId, new SelectList((List<SelectListItem>)ViewBag.Roles, "Value", "Text"), new { @class="form-control" })
                            @Html.ValidationMessageFor(m => m.SponsorId,"", new { @class="text-danger" })
                        </div>
                    </div>
                    
                    <div class="row form-group">
                        <div class="col col-md-3"><label class=" form-control-label">Is Free Account *</label></div>
                        <div class="col col-md-9">
                            @Html.HiddenFor(m => m.IsFreeAccount)
                            <div class="form-check-inline form-check">                                
                                <label for="inline-radio1" class="form-check-label ">                            
                                    <input type="radio" id="fa-yes" name="fa" value="option1" class="form-check-input" onclick="@("SetOptionValue('IsFreeAccount','true')")"  @(Model.IsFreeAccount == "true"? "checked":"")>Yes
                                </label>
                                &nbsp;
                                <label for="inline-radio2" class="form-check-label ">
                                    <input type="radio" id="fa-no" name="fa" value="option2" class="form-check-input" onclick="@("SetOptionValue('IsFreeAccount','false')")"  @(Model.IsFreeAccount == "false"? "checked":"")>No
                                </label>
                            </div>
                        </div>
                    </div>
                }
                else{
                    @Html.HiddenFor(m => m.RoleId)
                    @Html.HiddenFor(m => m.IsFreeAccount)
                }

            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Submit
                </button>
                <button type="reset" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Reset
                </button>
            </div>
            }        
                
    </div>
</div>

@section AdditionalScript{
    
    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            $('#PaymentType').val('@Model.PaymentType')
            SetPaymentFields($('#PaymentType').val(), false);

            $("#PaymentType").change(function () {
                $('.payment input, .payment textarea').val('');
                $(".payment").hide();
                SetPaymentFields($(this).val(), true);
            });

            function SetPaymentFields(pType, isFocus) {
                if (pType == "Cash") {

                    $(".paymentCash").attr('style', 'display:inline');
                    if (isFocus) $("#CashNote").focus();
                }
                else if (pType == "Deposit") {
                    $(".paymentDeposit").attr('style', 'display:inline');
                    if (isFocus) $("#BankBranch").focus();
                }
            }

        });

    </script>

}

