@model List<SettingViewModel>
@{
    ViewBag.Title = "Settings";
    Layout = "~/Areas/MyAccount/Views/Shared/_MyAccountLayout.cshtml";
}


<div class="col-lg-12">
    <div class="card">

        @using (Html.BeginForm())
        {
            <div class="card-body card-block">

                @if (ViewBag.IsSuccess != null)
                {
                    if ((bool)ViewBag.IsSuccess)
                    {
                        <div class="sufee-alert alert with-close alert-success alert-dismissible fade show">
                            <span class="badge badge-pill badge-success">Success!</span>
                            @System.Configuration.ConfigurationManager.AppSettings["RecordSuccessMsg"].ToString()
                        </div>
                    }
                    else
                    {
                        <div class="sufee-alert alert with-close alert-danger alert-dismissible fade show">
                            <span class="badge badge-pill badge-danger">Sorry!</span>
                            @System.Configuration.ConfigurationManager.AppSettings["RecordErrorMsg"].ToString()
                            @Html.ValidationSummary(false)
                        </div>
                    }
                }

                @if (Model != null)
                {
                    for (int i = 0; i < Model.Count; i++)
                    {
                        @Html.HiddenFor(x => x[i].SettingId);
                        @Html.HiddenFor(x => x[i].Key);
                        @Html.HiddenFor(x => x[i].Type);
                        <div class="row form-group">
                            <div class="col col-md-3"><label class=" form-control-label">@Model[i].Key</label></div>
                            <div class="col-12 col-md-5">
                                @if(Model[i].Type == "user")
                                {
                                    @Html.TextBoxFor(x=>x[i].Value, new { @class="form-control"})
                                }
                                else
                                {
                                    @Html.HiddenFor(x => x[i].Value);
                                    @Html.TextBoxFor(x => x[i].Value, new { @class = "form-control", @disabled = "disabled" })
                                }                                   
                            </div>
                        </div>
                    }
                }

            </div>
            
            if ((bool)ViewBag.HasEditable)
            {
                <div class="card-footer">
                    <button type="submit" class="btn btn-primary btn-sm">
                        <i class="fa fa-dot-circle-o"></i> Update
                    </button>
                    <button type="reset" class="btn btn-danger btn-sm">
                        <i class="fa fa-ban"></i> Reset
                    </button>
                </div>
            }
            
        }
    </div>
</div>